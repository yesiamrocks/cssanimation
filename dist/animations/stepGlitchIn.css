/*!
 * Module: stepGlitchIn Animation
 * Usage: <div class="cssanimation stepGlitchIn">Your Content</div>
 */
/* stylelint-disable */

:root {
  --cssanimation-duration: 1s;
  --cssanimation-fill-mode: both;
  --cssanimation-infinite: infinite;
  --cssanimation-backface-visibility: hidden;
  --cssanimation-transform-style: preserve-3d;
  --cssanimation-will-change: transform, opacity;
  --cssanimation-display: inline-block;
  --move-distance: -800px;
}

.cssanimation {
  animation-duration: var(--cssanimation-duration, 1s);
  animation-fill-mode: var(--cssanimation-fill-mode, both);
}

.cssanimation span {
  display: var(--cssanimation-display, inline-block);
}

.infinite {
  animation-iteration-count: var(--cssanimation-infinite, infinite) !important;
}

@media (prefers-reduced-motion: reduce) {
  .cssanimation,
  .cssanimation span {
    animation: none !important;
    transition: none !important;
  }
}
/* stylelint-enable */

.ca__fx-stepGlitchIn {
  animation: stepGlitchIn 1.1s steps(8, end) forwards;
  opacity: 0;
  transform: skewX(-15deg) scale(1.3);
  filter: blur(2px) brightness(1.5);
  will-change: transform, opacity, filter;
}

@keyframes stepGlitchIn {
  to {
    opacity: 1;
    transform: none;
    filter: none;
  }
}
